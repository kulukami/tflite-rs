pub mod memory;
pub mod memory_impl;
pub mod string;
#[macro_use]
pub mod vector;
pub mod vector_impl;
pub(crate) mod bindings {
    //include!("src/model/stl/stl_types.rs");
    /* automatically generated by rust-bindgen 0.55.1 */
    #[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
    pub mod root {
        #[allow(unused_imports)]
        use self::super::root;
        pub mod std {
            #[allow(unused_imports)]
            use self::super::super::root;
            pub type string = [u64; 4usize];
        }
        pub mod __gnu_cxx {
            #[allow(unused_imports)]
            use self::super::super::root;
        }
        pub mod rust {
            #[allow(unused_imports)]
            use self::super::super::root;
            #[repr(C)]
            #[repr(align(8))]
            #[derive(Debug, Copy, Clone, PartialEq, Eq)]
            pub struct dummy_vector {
                pub _bindgen_opaque_blob: [u64; 3usize],
            }
            #[repr(C)]
            #[repr(align(8))]
            #[derive(Debug, Copy, Clone, PartialEq, Eq)]
            pub struct vector_of_bool {
                pub _bindgen_opaque_blob: [u64; 5usize],
            }
            #[repr(C)]
            #[repr(align(8))]
            #[derive(Debug, Copy, Clone, PartialEq, Eq)]
            pub struct unique_ptr_of_void {
                pub _bindgen_opaque_blob: u64,
            }
        }
    }
}
